= form_for @link, multipart: true do |f|
  - if @link.errors.any?
    #error_explanation
      %h2= "#{pluralize(@link.errors.count, "error")} prohibited this link from being saved:"
      %ul
        - @link.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :email, 'Email to:'
    = f.text_field :email
  .field
    = f.file_field :s3_url
    /= f.hidden_field :user_id, current_user.id
  .actions
    = f.submit 'Save'

.bar
.progress
    
:javascript
  $(function() {
    
    $('#new_link').find("input:file").each(function(i, elem) {
      
      var s3_direct_post = '#{s3_direct_post?}';
      
      // if (s3_direct_post) {
      //   var url = '#{url}';
      //   var fields = '#{fields}';
      // }
      var url = '#{url}';
      var fields = '#{fields}';
      console.log(url);
      console.log(fields);
      
      var fileInput    = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput:       fileInput,
        url:             url,
        type:            'POST',
        autoUpload:       true,
        formData:         fields,
        paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.css('width', progress + '%')
        },
        start: function (e) {
          submitButton.prop('disabled', true);

          progressBar.
            css('background', 'green').
            css('display', 'block').
            css('width', '0%').
            text("Loading...");
        },
        done: function(e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key   = $(data.jqXHR.responseXML).find("Key").text();
          var url   = '//<%= @s3_direct_post.url.host %>/' + key;

          // create hidden field
          var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
          form.append(input);
        },
        fail: function(e, data) {
          submitButton.prop('disabled', false);

          progressBar.
            css("background", "red").
            text("Failed");
        }
      });
    });
  });
